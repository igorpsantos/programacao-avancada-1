<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2020-02-25T21:08:52-06:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Programação Avançada</title><author><name>Chauã Queirolo</name></author><entry><title type="html">Aula 01</title><link href="http://0.0.0.0:4000/2020/02/19/aula01.html" rel="alternate" type="text/html" title="Aula 01" /><published>2020-02-19T00:00:00-06:00</published><updated>2020-02-19T00:00:00-06:00</updated><id>http://0.0.0.0:4000/2020/02/19/aula01</id><content type="html" xml:base="http://0.0.0.0:4000/2020/02/19/aula01.html">&lt;h1 id=&quot;revisão-conceitos-básicos-de-c&quot;&gt;Revisão conceitos básicos de C++&lt;/h1&gt;

&lt;h2 id=&quot;processo-de-compilação&quot;&gt;Processo de compilação&lt;/h2&gt;

&lt;p&gt;Os elementos envolvidos no processo de compilação são&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Compilador&lt;/li&gt;
  &lt;li&gt;Link-editor&lt;/li&gt;
&lt;/ul&gt;

&lt;figure style=&quot;text-align: center&quot;&gt; 
    &lt;img src=&quot;//assets/aulas/processo-compilacao.png&quot; alt=&quot;Processo de compilação de um programa C++.&quot; align=&quot;middle&quot; /&gt;
  &lt;figcaption&gt;&lt;b&gt;Figura:&lt;/b&gt; Processo de compilação de um programa C++.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;diretivas-de-pré-compilação&quot;&gt;Diretivas de pré-compilação&lt;/h2&gt;

&lt;p&gt;As diretivas de pré-compilação são executadas antes do processo de compilação. Por esse motivo, erros de sintaxe só serão validados posteriormente.&lt;/p&gt;

&lt;h3 id=&quot;include&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#include&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Esta diretiva é usada para incluir cabeçalhos. Ela informa ao pré-processador para incluir o conteúdo dos arquivos no ponto do texto onde se encontra no arquivo fonte.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Inclui um arquivo que está nos diretórios padrão&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Inclui um arquivo que está nos diretórios locais&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;arquivo.h&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;define&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#define&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Esta diretiva é utilizada para substituir valores no arquivo fonte.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define PI 3.14
#define REAL double
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;REAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Também é possível definir macros que recebem parâmetros. A convenção para nomes de macros é utilizar todas letras maiúsculas separadas por underscore. Por exemplo:&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define MAX(x, y) (((x) &amp;gt; (y)) ? (x) : (y))
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Na definição das macros é importante envolver os valores entre parênteses para evitar problemas na ordem de precedência dos operadores. Por exemplo:&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define MULT_OK(x, y) x * y
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 30&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 21!&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 20!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;outras-diretivas&quot;&gt;Outras diretivas&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#undef&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#ifdef&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;#ifndef&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#if&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#else&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#elif&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;apelidos&quot;&gt;Apelidos&lt;/h2&gt;

&lt;p&gt;Em C++ é possível criar um apelido para um nome. Os apelidos são usados durante o período de compilação para se referir a nomes. Este mecanismo não cria um novo tipo, apenas um nome novo para um tipo.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Inteiro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Inteiro&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Pchar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;y é um char*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tipos-de-dados&quot;&gt;Tipos de dados&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tipos primitivos
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Modificadores de tipo: sinal
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;signed&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unsigned&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Modificadores de tipo: tamanho
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;short&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;long&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;comandos&quot;&gt;Comandos&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Comandos de decisão
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if / else&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if / else if&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;switch / case&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Comandos de repetição
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;do / while&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;operadores&quot;&gt;Operadores&lt;/h2&gt;

&lt;h3 id=&quot;operadores-aritméticos&quot;&gt;Operadores aritméticos&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Número&amp;gt; &amp;lt;operador&amp;gt; &amp;lt;Número&amp;gt; = &amp;lt;Número&amp;gt;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;operadores-relacionais&quot;&gt;Operadores relacionais&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Número&amp;gt; &amp;lt;operador&amp;gt; &amp;lt;Número&amp;gt; = &amp;lt;Booleano&amp;gt;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;=&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;=&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;operadores-lógicos&quot;&gt;Operadores lógicos&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Booleano&amp;gt; &amp;lt;operador&amp;gt; &amp;lt;Booleano&amp;gt; = &amp;lt;Booleano&amp;gt;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pencil-atividades&quot;&gt;:pencil: Atividades&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Escreva um programa que leia três números $a$, $b$ e $c$, e encontre as raízes $x_1$ e $x_2$ de uma equação do segundo grau no formato $ax^2 + bx + c = 0$. Para encontrar as raízes da equação utilize a fórmula de Bháskara.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;Crie uma macro &lt;code class=&quot;highlighter-rouge&quot;&gt;DELTA(a, b, c)&lt;/code&gt; para calcular o valor do delta da equação.&lt;/li&gt;
      &lt;li&gt;Crie o apelido &lt;code class=&quot;highlighter-rouge&quot;&gt;Real&lt;/code&gt; para o tipo &lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Escreva um programa que leia um número $x$ e imprima o fatorial de todos os números no intervalo de 1 até $x$.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;books-referências-bibliográficas&quot;&gt;:books: Referências bibliográficas&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;STROUSTRUP, Bjarne; LISBÔA, Maria Lúcia Blanck; LISBÔA, Carlos Arthur Lang (Trad.). &lt;strong&gt;A linguagem de programação C++&lt;/strong&gt;. 3 ed. Porto Alegre, RS: Bookman, 2000. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Chauã Queirolo</name></author><summary type="html">Revisão conceitos básicos de C++</summary></entry><entry><title type="html">Aula 00</title><link href="http://0.0.0.0:4000/2020/02/17/aula00.html" rel="alternate" type="text/html" title="Aula 00" /><published>2020-02-17T00:00:00-06:00</published><updated>2020-02-17T00:00:00-06:00</updated><id>http://0.0.0.0:4000/2020/02/17/aula00</id><content type="html" xml:base="http://0.0.0.0:4000/2020/02/17/aula00.html">&lt;h1 id=&quot;apresentação-da-disciplina&quot;&gt;Apresentação da disciplina&lt;/h1&gt;

&lt;h2 id=&quot;closed_book-ementa&quot;&gt;:closed_book: Ementa&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Orientação a objetos intermediária.
    &lt;ul&gt;
      &lt;li&gt;interfaces.&lt;/li&gt;
      &lt;li&gt;classes abstratas.&lt;/li&gt;
      &lt;li&gt;objetos polimórficos.&lt;/li&gt;
      &lt;li&gt;herança múltipla.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Templates e macros.&lt;/li&gt;
  &lt;li&gt;Métodos virtuais e puramente virtuais.&lt;/li&gt;
  &lt;li&gt;Conceito de funções amigas.&lt;/li&gt;
  &lt;li&gt;Sobrecarga de operadores.&lt;/li&gt;
  &lt;li&gt;Containers STL.&lt;/li&gt;
  &lt;li&gt;Modelagem orientada a objetos.&lt;/li&gt;
  &lt;li&gt;Programação funcional em C++.&lt;/li&gt;
  &lt;li&gt;RTTI e cast (implícito, explícito e operadores de cast).&lt;/li&gt;
  &lt;li&gt;Objetos mutáveis versus imutáveis.&lt;/li&gt;
  &lt;li&gt;Introdução a padrões de projeto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;blue_book-competências-e-habilidades&quot;&gt;:blue_book: Competências e habilidades&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Conteúdos Conceituais&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Compreender a correta utilização dos padrões de projetos mais comuns.&lt;/li&gt;
      &lt;li&gt;Compreender a modelagem Unified Modeling Language (UML).&lt;/li&gt;
      &lt;li&gt;Compreender conceitos de orientação a objetos: herança, polimorfismo, sobrecarga de operadores, classes abstratas e funções amigas.&lt;/li&gt;
      &lt;li&gt;Compreender conceitos avançados de programação: funções lambda, programação genérica e manipulação de arquivos.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Conteúdos Procedimentais&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Modelar sistemas utilizando UML.&lt;/li&gt;
      &lt;li&gt;Desenvolver sistemas utilizando a linguagem de programação C++ a partir dos modelos UML.&lt;/li&gt;
      &lt;li&gt;Desenvolver sistemas empregando padrões de projetos.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Conteúdos Atitudinais&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Decidir a melhor maneira de realizar a modelagem do sistema.&lt;/li&gt;
      &lt;li&gt;Identificar padrões de projetos mais adequados para cada tipo de problema.&lt;/li&gt;
      &lt;li&gt;Coordenar o trabalho para desenvolvimento de sistemas em equipe.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;orange_book-temas-de-estudo&quot;&gt;:orange_book: Temas de estudo&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Revisão: Orientação a Objetos básica, C++ básico e biblioteca STL.&lt;/li&gt;
  &lt;li&gt;Orientação a Objetos Intermediária (interfaces, classes abstratas, objetos polimórficos, herança múltipla).&lt;/li&gt;
  &lt;li&gt;Métodos virtuais e puramente virtuais&lt;/li&gt;
  &lt;li&gt;Conceito de Funções Amigas&lt;/li&gt;
  &lt;li&gt;Containers STL&lt;/li&gt;
  &lt;li&gt;Sobrecarga de operadores&lt;/li&gt;
  &lt;li&gt;Templates e macros&lt;/li&gt;
  &lt;li&gt;Modelagem orientada a objetos&lt;/li&gt;
  &lt;li&gt;Functors e expressões lambda (C++11)&lt;/li&gt;
  &lt;li&gt;RTTI e Cast (implícito, explicito e operadores de cast)&lt;/li&gt;
  &lt;li&gt;Objetos mutáveis x imutáveis&lt;/li&gt;
  &lt;li&gt;Introdução a design patterns&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;green_book-avaliações&quot;&gt;:green_book: Avaliações&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1o bimestre
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Prova.....: 15/04 | 70%&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Trabalhos.: 15/04 | 30%&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2o bimestre
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Prova.....: 10/06 | 70%&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Trabalhos.: 17/06 | 30%&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2a chamada
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Prova.....: 22/06&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Exame final
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Prova.....: 29/06&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;books-referências-bibliográficas&quot;&gt;:books: Referências bibliográficas&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;MIZRAHI, Vctorine Viviane. &lt;strong&gt;Treinamento em Linguagem C++ - Módulo I&lt;/strong&gt;. Makron Books,1994.&lt;/li&gt;
  &lt;li&gt;MIZRAHI, Vctorine Viviane. &lt;strong&gt;Treinamento em Linguagem C++ - Módulo II&lt;/strong&gt;. Makron Books,1994.&lt;/li&gt;
  &lt;li&gt;STROUSTRUP, Bjarne; LISBÔA, Maria Lúcia Blanck; LISBÔA, Carlos Arthur Lang (Trad.). &lt;strong&gt;A linguagem de programação C++&lt;/strong&gt;. 3 ed. Porto Alegre, RS: Bookman, 2000.&lt;/li&gt;
  &lt;li&gt;OVERLAND, Brian. &lt;strong&gt;C++ Without Fear&lt;/strong&gt;. Prentice Hall, 2ed, 2011.&lt;/li&gt;
  &lt;li&gt;BENTLEY, Jon. &lt;strong&gt;Programming Pearls&lt;/strong&gt;. Addison Wesley, 2ed, 2000.&lt;/li&gt;
  &lt;li&gt;MEYERS, Scott. &lt;strong&gt;Effective C++&lt;/strong&gt;. Addison Wesley, 3ed, 2005.&lt;/li&gt;
  &lt;li&gt;DEITEL, Paul e DEITEL, Harvey. &lt;strong&gt;C++ How to Program&lt;/strong&gt;. 10 ed. Pearson, 2016&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Chauã Queirolo</name></author><summary type="html">Apresentação da disciplina</summary></entry></feed>